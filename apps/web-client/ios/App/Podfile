require_relative '../../node_modules/@capacitor/ios/scripts/pods_helpers'

platform :ios, '14.0'
use_frameworks!

# workaround to avoid Xcode caching of Pods that requires
# Product -> Clean Build Folder after new Cordova plugins installed
# Requires CocoaPods 1.6 or newer
install! 'cocoapods', :disable_input_output_paths => true

def capacitor_pods
  pod 'Capacitor', :path => '../../../../node_modules/.pnpm/@capacitor+ios@5.7.8_@capacitor+core@5.7.8/node_modules/@capacitor/ios'
  pod 'CapacitorCordova', :path => '../../../../node_modules/.pnpm/@capacitor+ios@5.7.8_@capacitor+core@5.7.8/node_modules/@capacitor/ios'
  pod 'CapacitorDevice', :path => '../../../../node_modules/.pnpm/@capacitor+device@5.0.8_@capacitor+core@5.7.8/node_modules/@capacitor/device'
  pod 'PolytlkEchoPlugin', :path => '../../../../node_modules/.pnpm/@polytlk+echo-plugin@0.6.0/node_modules/@polytlk/echo-plugin'
  pod 'CapacitorSecureStoragePlugin', :path => '../../../../node_modules/.pnpm/capacitor-secure-storage-plugin@0.9.0_@capacitor+core@5.7.8/node_modules/capacitor-secure-storage-plugin'
end

target 'App' do
  capacitor_pods
  # Add your Pods here
end

post_install do |installer|
  puts "Running post_install hook"
  # assertDeploymentTarget(installer)
  puts "Running post_install hook after assert"
  
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      puts "Running post_install hook looping"
      base_config_ref = config.base_configuration_reference
      
      if base_config_ref.nil?
        puts "Warning: base_configuration_reference is nil for #{config.name}"
        next
      end
      
      real_path = base_config_ref.real_path
      
      if real_path.nil?
        puts "Warning: real_path is nil for #{config.name}"
      else
        puts "Real path for #{config.name}: #{real_path}"
      end
    end
  end
end