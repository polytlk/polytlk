---
# Source: tyk-headless/templates/deployment-gw-repset.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-tyk-headless
  labels:
    app: gateway-tyk-headless
    chart: tyk-headless-0.15.0
    release: tyk-headless
    heritage: Helm
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    # indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: gateway-tyk-headless
      release: tyk-headless
  template:
    metadata:
      labels:
        app: gateway-tyk-headless
        release: tyk-headless
      annotations:
        checksum/config: 94aee2bc0e6d15162370c0cc49768c4a1fcd2352d31ce89310f98a229e3f2cf3
        checksum/secrets: 3c9761885f3be03ab0663cc2e9d8756eaa918c844c84f60fbd946eec3704664d
        checksum/secret-certs: aabef88d1032e98536555fc7e0789f21cc49b87644237b7b15779f0cd71be053
    spec:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      initContainers:
      - name: "setup-directories"
        image: busybox:1.32
        command: ['sh','-c','mkdir -p apps middleware policies && touch policies/policies.json']
        workingDir: /mnt/tyk-gateway
        volumeMounts:
          - name: tyk-scratch
            mountPath: /mnt/tyk-gateway
      containers:
      - name: gateway-tyk-headless
        image: "docker.tyk.io/tyk-gateway/tyk-gateway:v5.0.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - all
        env:
          - name: TYK_GW_LISTENPORT
            value: "8080"
          # Lagacy support for Redis Cluster driver. Driver dropped in v3.0.0.
          - name: REDIGOCLUSTER_SHARDCOUNT
            value: "128"
          - name: TYK_GW_STORAGE_ADDRS
            value: "redis-master.default.svc.cluster.local:6379"

          
          
          - name: TYK_GW_STORAGE_MASTERNAME
            value: ""
          - name: TYK_GW_STORAGE_ENABLECLUSTER
            value: "false"
         
          - name: TYK_GW_STORAGE_DATABASE
            value: "0"
          - name: TYK_GW_STORAGE_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  secrets-tyk-headless 
                key: redisPass
          - name: TYK_GW_STORAGE_USESSL
            value: "false"
          

          - name: TYK_GW_SECRET
            valueFrom:
              secretKeyRef:
                name:  secrets-tyk-headless 
                key: APISecret
          - name: TYK_GW_NODESECRET
            valueFrom:
              secretKeyRef:
                name:  secrets-tyk-headless 
                key: APISecret
          - name: TYK_GW_HTTPSERVEROPTIONS_USESSL
            value: "false"
          - name: TYK_GW_POLICIES_POLICYPATH
            value: "/mnt/tyk-gateway/policies"
          - name: TYK_GW_ENABLEJSVM
            value: "true"
          - name: TYK_GW_LOGLEVEL
            value: info
          - name: TYK_GW_POLICIES_POLICYSOURCE
            value: file
          - name: TYK_GW_POLICIES_POLICYPATH
            value: ""
          - name: TYK_GW_POLICIES_POLICYRECORDNAME
            value: /mnt/tyk-gateway/policies/policies.json
        command: ["/opt/tyk-gateway/tyk", "--conf=/etc/tyk-gateway/tyk.conf"]
        workingDir: /opt/tyk-gateway
        ports:
        - containerPort: 8080
        resources:
            {}
        volumeMounts:
          - name: tyk-mgmt-gateway-conf
            mountPath: /etc/tyk-gateway
          - name: tyk-headless-default-cert
            mountPath: /etc/certs
          - name: tyk-scratch
            mountPath: /mnt/tyk-gateway
          - mountPath: /mnt/tyk-gateway/policies
            name: policy-config
            readOnly: true
          - mountPath: /mnt/tyk-gateway/middleware
            name: sse-auth-pre-middleware
            readOnly: true
        livenessProbe:
          httpGet:
            scheme: "HTTP"
            path: /hello
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 3
          failureThreshold: 2
        readinessProbe:
          httpGet:
            scheme: "HTTP"
            path: /hello
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      securityContext:
          fsGroup: 2000
          runAsUser: 1000
      volumes:
        - name: tyk-scratch
          emptyDir: {}
        - name: tyk-mgmt-gateway-conf
          configMap:
            name: mgmt-gateway-conf-tyk-headless
            items:
              - key: tyk_mgmt.conf
                path: tyk.conf
        - name: tyk-headless-default-cert
          secret:
            secretName: tyk-headless-default-cert
        - configMap:
            name: policy-config
          name: policy-config
        - configMap:
            name: sse-auth-pre-middleware-tbmcf478cg
          name: sse-auth-pre-middleware
