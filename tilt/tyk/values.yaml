global:
  components:
    operator: false
  redis:
    addrs:
    - redis-master.default.svc.cluster.local:6379
    pass: ""
    storage:
      database: 0
  secrets:
    APISecret: CHANGEME
    useSecretName: ""
  servicePorts:
    gateway: 8080
tyk-gateway:
  fullnameOverride: tyk
  gateway:
    containerPort: 8080
    extraEnvs:
    - name: TYK_GW_ENABLEJSVM
      value: "true"
    - name: TYK_GW_LOGLEVEL
      value: debug
    - name: TYK_GW_POLICIES_POLICYSOURCE
      value: file
    - name: TYK_GW_POLICIES_POLICYPATH
      value: ""
    - name: TYK_GW_POLICIES_POLICYRECORDNAME
      value: /mnt/tyk-gateway/policies/policies.json
    extraVolumeMounts:
    - mountPath: /mnt/tyk-gateway/policies
      name: policy-config
      readOnly: true
    - mountPath: /mnt/tyk-gateway/middleware
      name: sse-auth-pre-middleware
      readOnly: true
    extraVolumes:
    - configMap:
        name: policy-config
      name: policy-config
    - configMap:
        name: sse-auth-pre-middleware-tbmcf478cg
      name: sse-auth-pre-middleware
    hostName: tyk-gw.local
    image:
      repository: docker.tyk.io/tyk-gateway/tyk-gateway
      tag: v5.5.0
    initContainers:
      setupDirectories:
        repository: busybox
        tag: 1.32
    kind: Deployment
    opentelemetry:
      connectionTimeout: 1
      contextPropagation: tracecontext
      enabled: true
      endpoint: http://opentelemetry-collector.otel-collector.svc.cluster.local/v1/traces
      exporter: http
      headers: {}
      resourceName: tyk-api-gateway
      spanProcessorType: batch
    replicaCount: 1
