# nameOverride overrides the Chart name. It is truncated to 63 characters.
nameOverride: ""
# fullnameOverride overrides App name. It is truncated to 63 characters.
fullnameOverride: ""
# operatorSecret controls if a secret needed to connect to Operator will be created
operatorSecret:
  # enabled if set to true creates secret
  enabled: false
global:
  components:
    operator: false
  servicePorts:
    # The port at which the gateway service can be found at
    gateway: 80
  tls:
    # When true, sets the gateway protocol to HTTPS.
    gateway: false
    # When true, it will install the certificate present in the templates folder, set to false when using
    # a custom TLS certificate to avoid overwriting yours
    useDefaultTykCertificate: false
  secrets:
    # APISecret sets secret in tyk.conf
    APISecret: CHANGEME
    # useSecretName can be used if you don't want to store plaintext secrets in the Helm value file and would
    # rather provide the k8s Secret externally.
    # You can set following fields in the secret
    # - APISecret - Sets node_secret and secret in tyk.conf
    useSecretName: ""

  redis:
    addrs:
      - vultr-prod-d47b69c5-e2a2-45ec-87e7-0ea500632c3e-vultr-prod-e0ea.vultrdb.com:16752
    pass: "AVNS_jkwFYGZUVFCQhVmdUMw"
    useSSL: true

    # Allows usage of self-signed certificates when connecting to an encrypted Redis database.
    # sslInsecureSkipVerify: false

    # Path to the CA file.
    # sslCAFile: ""

    # The Volume mount path
    # Default value: /etc/certs
    # certificatesMountPath: ""

    # Path to the cert file.
    # sslCertFile: ""

    # Path to the key file.
    # sslKeyFile: ""

    # Name of the tls secret. A secret needs to be created for this manually using the name as specified here
    # secretName: ""

    # Name of the volume where the secret will be mounted
    # volumeName: ""

    # If using "Redis Cluster" set enableCluster to true
    # (e.g. if using bitnami/redis-cluster)
    # enableCluster: true

    # Enables sentinel connection mode for Redis. If enabled, provide both
    # mandatory values for sentinelPass and masterName.
    # enableSentinel: false

    # Redis sentinel password, only required while enableSentinel is true.
    # For bitnami/redis the same password as Redis above
    # sentinelPass: ""

    # Redis sentinel master name, only required while enableSentinel is true.
    # For bitnami/redis typically redis-master
    # masterName: ""

    # By default, the database index is 0. Setting the database index is not
    # supported with redis cluster. As such, if you have enableCluster: true,
    # then this value should be omitted or explicitly set to 0.
    storage:
      database: 0

  # hashKeys is used to enable/disable key hashing.
  hashKeys: true

  # Enables validation of examples in the OAS spec. Defaults to false.
  # It is used to set TYK_GW_OAS_VALIDATE_EXAMPLES
  oasValidateExamples: false
  # Enables validation of schema defaults in the OAS spec. Defaults to false.
  # It is used to set TYK_GW_OAS_VALIDATE_SCHEMA_DEFAULTS
  oasValidateSchemaDefaults: false

tyk-gateway:
  ## Default values for tyk-gateway chart.
  ## This is a YAML-formatted file.
  ## Declare variables to be passed into your templates.
  ## See Tyk Helm documentation for installation details:
  ## https://tyk.io/docs/tyk-oss/ce-helm-chart/
  ## Registry for all Tyk images - https://hub.docker.com/u/tykio

  # nameOverride overrides the Chart name. It is truncated to 63 characters.
  # Default value: tyk-gateway.name
  nameOverride: ""

  # fullnameOverride overrides App name. It is truncated to 63 characters.
  # Default value: tyk-gateway.fullname
  fullnameOverride: ""

  gateway:
    # The hostname to bind the Gateway to.
    hostName: tyk-gw.local

    # EnableFixedWindowRateLimiter enables fixed window rate limiting.
    # FixedWindow will allow requests up to the configured rate limit,
    # and then block traffic for the remainder of the window duration.
    # It has minimal impact on redis, however it will not protect against
    # traffic spikes, it does not have spike arrest behaviour.
    enableFixedWindowRateLimiter: false

    # tls:
    #   # The name of the secret which should contain the TLS certificate you want to use with the gateway deployment
    #   secretName: gateway-tls
    #   # This options allows you to skip verifying the TLS certificate. This is typically enabled when using self-signed certs.
    #   insecureSkipVerify: false
    # 
    #   # certificatesMountPath corresponds to the mount path of the secret.
    #   certificatesMountPath: "/etc/certs/tyk-gateway"
    #   # certificates is an array of strings, used to set TYK_GW_HTTPSERVEROPTIONS_CERTIFICATES
    #   certificates:
    #     - domain_name: "dev.polytlk.io"
    #       cert_file: "/etc/certs/tyk-gateway/tls.crt"
    #       key_file: "/etc/certs/tyk-gateway/tls.key"

    # kind is type of k8s object to be created for gateway.
    kind: Deployment

    # podAnnotations is annotations to be added to Tyk Gateway pod.
    # It takes key-value pairs.
    # There are no required annotation field for Tyk Gateway.
    #
    # podAnnotations:
    #   yourkey: value
    #   image: yourhub
    podAnnotations: {}

    # podLabels specifies labels to be added in gateway Pod
    podLabels: {}

    # replicaCount specifies number of replicas to be created if kind is Deployment.
    replicaCount: 1

    # PodDisruptionBudget configuration
    pdb:
      enabled: false
      # minAvailable and maxUnavailable configure thresholds for PodDisruptionBudget resource
      # per PodDisruptionBudget spec they are mutually exclusive, but this chart allows
      # setting them both, in which case minAvailable will take precedence
      minAvailable: ""
      maxUnavailable: ""

    # autoscaling configuration if kind IS NOT DaemonSet
    autoscaling: {}
    #  enabled: true
    #  minReplicas: 1
    #  maxReplicas: 3
    #  averageCpuUtilization: 60
    #  averageMemoryUtilization: null
    #  autoscalingTemplate:
    #   Custom or additional autoscaling metrics
    #   ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-custom-metrics
    #    - type: Pods
    #      pods:
    #        metric:
    #          name: nginx_ingress_controller_nginx_process_requests_total
    #        target:
    #          type: AverageValue
    #          averageValue: 10000m

    image:
      # image repository for Tyk Gateway
      repository: docker.tyk.io/tyk-gateway/tyk-gateway

      # image tag for Tyk Gateway
      tag: v5.5.0

      # image pull policy for Tyk Gateway
      pullPolicy: IfNotPresent

    initContainers:
      # image configuration for the initContainer that setups up the tyk directory structure
      setupDirectories:
        repository: busybox
        tag: 1.32
        resources: {}
        # If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi

    # image pull secrets to use when pulling images from repository
    imagePullSecrets: []

    # The port which will be exposed on the container for tyk-gateway
    containerPort: 8080

    service:
      # type of service
      type: ClusterIP

      # external traffic policy of the service. Set it only if you are using LoadBalancer service type
      externalTrafficPolicy: Local

      # annotations for service
      annotations: {
      }

      # Name for the service Port
      portName: ""    

    control:
      # If enabled, exposes control port of the gateway
      enabled: false

      # control port of gateway
      containerPort: 9696

      # port number for control port service
      port: 9696

      # service type for control port service
      type: ClusterIP

      # annotations for control port service
      annotations: {}

      # control ingress
      ingress:
        # if enabled, creates an ingress resource for the gateway control
        enabled: false

        # specify ingress controller class name
        className: ""

        # annotations for ingress
        annotations: {}

        # ingress rules
        hosts:
          - host: chart-example-control-api-domain.local
            paths:
              - path: /
                pathType: ImplementationSpecific

        # tls configuration for ingress
        #  - secretName: chart-example-tls
        #    hosts:
        #      - chart-example-different-domain-possible.local
        tls: []

    # Creates an ingress object in k8s. Will require an ingress-controller and
    # annotation to that ingress controller.
    ingress:
      # if enabled, creates an ingress resource for the gateway
      enabled: true

      # specify ingress controller class name
      className: "nginx"

      # annotations for ingress
      annotations: {}

      # ingress rules
      hosts:
        - host: dev.api.polytlk.io
          paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: gateway-svc-tyk-headless-tyk-gateway
                  port:
                    number: 80

      # tls configuration for ingress
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local
      tls:
      - secretName: gateway-tls
        hosts:
         - dev.api.polytlk.io
        

    # We usually recommend not to specify default resources and to leave this
    # as a conscious choice for the user. This also increases chances charts
    # run on environments with little resources, such as Minikube. If you do
    # want to specify resources, uncomment the following lines, adjust them
    # as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
    resources: {}

    # securityContext values for gateway pod. All fields from PodSecurityContext object can be added here.
    securityContext:
      runAsUser: 1000
      fsGroup: 2000
      runAsNonRoot: true

    # containerSecurityContext values for gateway container. All fields from SecurityContext object can be added here.
    containerSecurityContext:
      runAsNonRoot: true
      runAsUser: 1000
      allowPrivilegeEscalation: false
      privileged: false
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop:
          - ALL

    # node labels for gateway pod assignment
    nodeSelector: {}

    # tolerations for gateway pod assignment
    tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule

    # affinity for gateway pod assignment
    affinity: {}

    # analyticsEnabled property is used to enable/disable analytics.
    # If set to empty or nil, analytics will be enabled/disabled based on `global.components.pump`.
    analyticsEnabled: ""

    # opentelemetry is used to configure opentelemetry for Tyk Gateway
    opentelemetry:
      # Used to enable/disable opentelemetry
      enabled: true
      # exporter is used to define the type of the exporter to sending data in OTLP protocol
      # Valid values are "grpc" or "http"
      exporter: http
      # endpoint defines OpenTelemetry collector endpoint to connect to.
      endpoint: http://opentelemetry-collector.default.svc.cluster.local/v1/traces
      # A map of headers that will be sent with HTTP requests to the collector.
      # It should be set to map of string to string
      headers: {}
      # Timeout for establishing a connection to the collector
      connectionTimeout: 1
      # Name of the resource that will be used to identify the resource.
      resourceName: tyk
      # Type of the span processor to use. Valid values are “simple” or “batch”.
      spanProcessorType: batch
      # Type of the context propagator to use. Valid values are "tracecontext" and "b3".
      contextPropagation: tracecontext
      # TLS configuration for the exporter.
      tls:
        # Flag that can be used to enable TLS
        enabled: false
        # Flag that can be used to skip TLS verification if TLS is enabled
        insecureSkipVerify: true
        # Maximum TLS version that is supported.
        maxVersion: 1.3
        # Minimum TLS version that is supported
        minVersion: 1.2
        # Path to the cert file
        certFileName: ""
        # Path to the key file
        keyFileName: ""
        # Path to CA file
        caFileName: ""
        # Existing secret that stores TLS and CA Certificate
        certificateSecretName: ""
        # Mount path on which certificate secret should be mounted
        secretMountPath: ""
      sampling:
        # Refers to the policy used by OpenTelemetry to determine whether a particular trace should be sampled or not.
        type: "AlwaysOn"
        # Parameter for the TraceIDRatioBased sampler type and represents the percentage of traces to be sampled.
        rate: 0.5
        # Rule that ensures that if we decide to record data for a particular operation, we’ll also record data for
        # all the subsequent work that operation causes
        parentBased: false
    extraEnvs:
      - name: TYK_GW_TRACK404LOGS
        value: "true"
      - name: TYK_GW_ENABLEJSVM
        value: "true"
      - name: TYK_GW_LOGLEVEL
        value: "debug"
      - name: TYK_GW_POLICIES_POLICYSOURCE
        value: "file"
      - name: TYK_GW_POLICIES_POLICYPATH
        value: ""
      - name: TYK_GW_POLICIES_POLICYRECORDNAME
        value: /mnt/tyk-gateway/policies/policies.json
    extraVolumes:
      - name: policy-config
        configMap:
          name: policy-config
      - name: sse-auth-pre-middleware
        configMap:
          name: sse-auth-pre-middleware-tbmcf478cg
    extraVolumeMounts:
      - name: policy-config
        mountPath: "/mnt/tyk-gateway/policies"
        readOnly: true
      - name: sse-auth-pre-middleware
        mountPath: "/mnt/tyk-gateway/middleware"
        readOnly: true