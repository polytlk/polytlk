load('ext://namespace', 'namespace_create', 'namespace_inject')
load('ext://secret', 'secret_from_dict')

def helmfile_template(file):
  return local("helmfile -f %s template --include-crds | grep -v -e '^Decrypting .*' | grep -v -e '^Fetching .*' | grep -v 'as it is not a table.$'" % file)

namespace_create('tyk')

k8s_yaml(namespace_inject(read_file('policy-configmap.yaml'), 'tyk'))
# created with 
# kubectl create configmap sse-auth-pre-middleware --from-file=./middleware/sse-auth-pre-middleware.js --append-hash=true --dry-run=client -o yaml > ./k8s/tyk/ce/sse-auth-pre-middleware.yaml
k8s_yaml(namespace_inject(read_file('sse-auth-pre-middleware.yaml'), 'tyk'))

k8s_yaml(namespace_inject(read_file('tyk-operator-conf.yaml'), 'tyk'))


# Tell Tilt to apply to k8s config generated by helmfile.
k8s_yaml(namespace_inject(helmfile_template("./helmfile.yaml"), 'tyk'))

k8s_resource(
  workload='gateway-tyk-headless',
  new_name='tyk-gateway',
  labels=['api-gateway'],
  resource_deps=['redis-master'],
  port_forwards=8080
)

k8s_resource(
  workload='tyk-operator-controller-manager',
  new_name='tyk-operator',
  labels=['ops'],
  resource_deps=['tyk-gateway']
)
